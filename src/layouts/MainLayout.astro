---
import "~/styles/main.css"

export interface Props {
  title: string
  description?: string
  path?: string[]
  lang?: "en" | "es"
}

const { title, description, path = [], lang = "en" } = Astro.props as Props
const canonicalURL = Astro.canonicalURL
---

<html {lang}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />

    <title>{title}</title>
    {description && <meta name="description" content={description} />}

    <meta property="og:title" content={title} />
    {description && <meta property="og:description" content={description} />}
    <meta property="og:url" content={canonicalURL} />

    <link rel="icon" href="/favicon.ico" sizes="any" />
    <link rel="icon" href="/icon.svg" type="image/svg+xml" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
    <link rel="manifest" href="/manifest.webmanifest" />
    <link rel="sitemap" href="/sitemap-index.xml" />

    <slot name="head" />

    <script
      async
      defer
      data-website-id="4afe33e6-87d1-40d1-adb1-613d1487c0b2"
      src="https://umami.juanm04.com/umami.js"
      is:inline
    />
  </head>

  <body>
    <div class="max-w-2xl mb-12 mx-auto">
      {path.length >= 1 && (
        <nav class="mt-4 mb-12 leading-none text-2xl font-light block">
          <a href="/" class="font-black hover:text-red-500 transition-colors">~ </a>
          {path.map((segment, i) => (
            <a
              href={'/' + path.slice(0, i + 1).join('/') + '/'}
              class="hover:text-red-500 transition-colors before:content-['/'] before:text-xl before:inline-block"
            >
              {segment}
            </a>
          ))}
        </nav>
      )}

      <slot />
    </div>
  </body>
</html>
